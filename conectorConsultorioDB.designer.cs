#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Consultorio
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Consultorio")]
	public partial class conexionConsultorioDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCita(Cita instance);
    partial void UpdateCita(Cita instance);
    partial void DeleteCita(Cita instance);
    partial void InsertPaciente(Paciente instance);
    partial void UpdatePaciente(Paciente instance);
    partial void DeletePaciente(Paciente instance);
    partial void InsertDentista(Dentista instance);
    partial void UpdateDentista(Dentista instance);
    partial void DeleteDentista(Dentista instance);
    partial void InsertEspecialidade(Especialidade instance);
    partial void UpdateEspecialidade(Especialidade instance);
    partial void DeleteEspecialidade(Especialidade instance);
    #endregion
		
		public conexionConsultorioDBDataContext() : 
				base(global::Consultorio.Properties.Settings.Default.ConsultorioConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public conexionConsultorioDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public conexionConsultorioDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public conexionConsultorioDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public conexionConsultorioDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cita> Citas
		{
			get
			{
				return this.GetTable<Cita>();
			}
		}
		
		public System.Data.Linq.Table<Paciente> Pacientes
		{
			get
			{
				return this.GetTable<Paciente>();
			}
		}
		
		public System.Data.Linq.Table<Dentista> Dentistas
		{
			get
			{
				return this.GetTable<Dentista>();
			}
		}
		
		public System.Data.Linq.Table<Especialidade> Especialidades
		{
			get
			{
				return this.GetTable<Especialidade>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BuscarCita")]
		public ISingleResult<BuscarCitaResult> BuscarCita([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idCita)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idCita);
			return ((ISingleResult<BuscarCitaResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BuscarPaciente")]
		public ISingleResult<BuscarPacienteResult> BuscarPaciente([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idPaciente)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idPaciente);
			return ((ISingleResult<BuscarPacienteResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BuscarDentista")]
		public ISingleResult<BuscarDentistaResult> BuscarDentista([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idDentista)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idDentista);
			return ((ISingleResult<BuscarDentistaResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DentistasMostrarTodos")]
		public ISingleResult<DentistasMostrarTodosResult> DentistasMostrarTodos()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<DentistasMostrarTodosResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BuscarEspecialidad")]
		public ISingleResult<BuscarEspecialidadResult> BuscarEspecialidad([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idEspecialidad)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idEspecialidad);
			return ((ISingleResult<BuscarEspecialidadResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PacientesMostrarTodos")]
		public ISingleResult<PacientesMostrarTodosResult> PacientesMostrarTodos()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<PacientesMostrarTodosResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EspecialidadesMostrarTodos")]
		public ISingleResult<EspecialidadesMostrarTodosResult> EspecialidadesMostrarTodos()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<EspecialidadesMostrarTodosResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CitasMostrarTodos")]
		public ISingleResult<CitasMostrarTodosResult> CitasMostrarTodos()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<CitasMostrarTodosResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Citas")]
	public partial class Cita : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CitaID;
		
		private int _DentistaID;
		
		private int _EspecialidadID;
		
		private int _PacienteID;
		
		private string _DescripciónTrabajo;
		
		private EntityRef<Paciente> _Paciente;
		
		private EntityRef<Dentista> _Dentista;
		
		private EntityRef<Especialidade> _Especialidade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCitaIDChanging(int value);
    partial void OnCitaIDChanged();
    partial void OnDentistaIDChanging(int value);
    partial void OnDentistaIDChanged();
    partial void OnEspecialidadIDChanging(int value);
    partial void OnEspecialidadIDChanged();
    partial void OnPacienteIDChanging(int value);
    partial void OnPacienteIDChanged();
    partial void OnDescripciónTrabajoChanging(string value);
    partial void OnDescripciónTrabajoChanged();
    #endregion
		
		public Cita()
		{
			this._Paciente = default(EntityRef<Paciente>);
			this._Dentista = default(EntityRef<Dentista>);
			this._Especialidade = default(EntityRef<Especialidade>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CitaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CitaID
		{
			get
			{
				return this._CitaID;
			}
			set
			{
				if ((this._CitaID != value))
				{
					this.OnCitaIDChanging(value);
					this.SendPropertyChanging();
					this._CitaID = value;
					this.SendPropertyChanged("CitaID");
					this.OnCitaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DentistaID", DbType="Int NOT NULL")]
		public int DentistaID
		{
			get
			{
				return this._DentistaID;
			}
			set
			{
				if ((this._DentistaID != value))
				{
					if (this._Dentista.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDentistaIDChanging(value);
					this.SendPropertyChanging();
					this._DentistaID = value;
					this.SendPropertyChanged("DentistaID");
					this.OnDentistaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EspecialidadID", DbType="Int NOT NULL")]
		public int EspecialidadID
		{
			get
			{
				return this._EspecialidadID;
			}
			set
			{
				if ((this._EspecialidadID != value))
				{
					if (this._Especialidade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEspecialidadIDChanging(value);
					this.SendPropertyChanging();
					this._EspecialidadID = value;
					this.SendPropertyChanged("EspecialidadID");
					this.OnEspecialidadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PacienteID", DbType="Int NOT NULL")]
		public int PacienteID
		{
			get
			{
				return this._PacienteID;
			}
			set
			{
				if ((this._PacienteID != value))
				{
					if (this._Paciente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPacienteIDChanging(value);
					this.SendPropertyChanging();
					this._PacienteID = value;
					this.SendPropertyChanged("PacienteID");
					this.OnPacienteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescripciónTrabajo", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string DescripciónTrabajo
		{
			get
			{
				return this._DescripciónTrabajo;
			}
			set
			{
				if ((this._DescripciónTrabajo != value))
				{
					this.OnDescripciónTrabajoChanging(value);
					this.SendPropertyChanging();
					this._DescripciónTrabajo = value;
					this.SendPropertyChanged("DescripciónTrabajo");
					this.OnDescripciónTrabajoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Cita", Storage="_Paciente", ThisKey="PacienteID", OtherKey="PacienteID", IsForeignKey=true)]
		public Paciente Paciente
		{
			get
			{
				return this._Paciente.Entity;
			}
			set
			{
				Paciente previousValue = this._Paciente.Entity;
				if (((previousValue != value) 
							|| (this._Paciente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Paciente.Entity = null;
						previousValue.Citas.Remove(this);
					}
					this._Paciente.Entity = value;
					if ((value != null))
					{
						value.Citas.Add(this);
						this._PacienteID = value.PacienteID;
					}
					else
					{
						this._PacienteID = default(int);
					}
					this.SendPropertyChanged("Paciente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dentista_Cita", Storage="_Dentista", ThisKey="DentistaID", OtherKey="DentistaID", IsForeignKey=true)]
		public Dentista Dentista
		{
			get
			{
				return this._Dentista.Entity;
			}
			set
			{
				Dentista previousValue = this._Dentista.Entity;
				if (((previousValue != value) 
							|| (this._Dentista.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dentista.Entity = null;
						previousValue.Citas.Remove(this);
					}
					this._Dentista.Entity = value;
					if ((value != null))
					{
						value.Citas.Add(this);
						this._DentistaID = value.DentistaID;
					}
					else
					{
						this._DentistaID = default(int);
					}
					this.SendPropertyChanged("Dentista");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Especialidade_Cita", Storage="_Especialidade", ThisKey="EspecialidadID", OtherKey="EspecialidadID", IsForeignKey=true)]
		public Especialidade Especialidade
		{
			get
			{
				return this._Especialidade.Entity;
			}
			set
			{
				Especialidade previousValue = this._Especialidade.Entity;
				if (((previousValue != value) 
							|| (this._Especialidade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Especialidade.Entity = null;
						previousValue.Citas.Remove(this);
					}
					this._Especialidade.Entity = value;
					if ((value != null))
					{
						value.Citas.Add(this);
						this._EspecialidadID = value.EspecialidadID;
					}
					else
					{
						this._EspecialidadID = default(int);
					}
					this.SendPropertyChanged("Especialidade");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pacientes")]
	public partial class Paciente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PacienteID;
		
		private string _NombrePaciente;
		
		private string _Dirección;
		
		private string _Teléfono;
		
		private EntitySet<Cita> _Citas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPacienteIDChanging(int value);
    partial void OnPacienteIDChanged();
    partial void OnNombrePacienteChanging(string value);
    partial void OnNombrePacienteChanged();
    partial void OnDirecciónChanging(string value);
    partial void OnDirecciónChanged();
    partial void OnTeléfonoChanging(string value);
    partial void OnTeléfonoChanged();
    #endregion
		
		public Paciente()
		{
			this._Citas = new EntitySet<Cita>(new Action<Cita>(this.attach_Citas), new Action<Cita>(this.detach_Citas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PacienteID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PacienteID
		{
			get
			{
				return this._PacienteID;
			}
			set
			{
				if ((this._PacienteID != value))
				{
					this.OnPacienteIDChanging(value);
					this.SendPropertyChanging();
					this._PacienteID = value;
					this.SendPropertyChanged("PacienteID");
					this.OnPacienteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombrePaciente", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string NombrePaciente
		{
			get
			{
				return this._NombrePaciente;
			}
			set
			{
				if ((this._NombrePaciente != value))
				{
					this.OnNombrePacienteChanging(value);
					this.SendPropertyChanging();
					this._NombrePaciente = value;
					this.SendPropertyChanged("NombrePaciente");
					this.OnNombrePacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dirección", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Dirección
		{
			get
			{
				return this._Dirección;
			}
			set
			{
				if ((this._Dirección != value))
				{
					this.OnDirecciónChanging(value);
					this.SendPropertyChanging();
					this._Dirección = value;
					this.SendPropertyChanged("Dirección");
					this.OnDirecciónChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teléfono", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Teléfono
		{
			get
			{
				return this._Teléfono;
			}
			set
			{
				if ((this._Teléfono != value))
				{
					this.OnTeléfonoChanging(value);
					this.SendPropertyChanging();
					this._Teléfono = value;
					this.SendPropertyChanged("Teléfono");
					this.OnTeléfonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Paciente_Cita", Storage="_Citas", ThisKey="PacienteID", OtherKey="PacienteID")]
		public EntitySet<Cita> Citas
		{
			get
			{
				return this._Citas;
			}
			set
			{
				this._Citas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Citas(Cita entity)
		{
			this.SendPropertyChanging();
			entity.Paciente = this;
		}
		
		private void detach_Citas(Cita entity)
		{
			this.SendPropertyChanging();
			entity.Paciente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dentistas")]
	public partial class Dentista : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DentistaID;
		
		private string _NombreDentista;
		
		private string _Dirección;
		
		private string _Teléfono;
		
		private int _Edad;
		
		private int _Especialidad;
		
		private EntitySet<Cita> _Citas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDentistaIDChanging(int value);
    partial void OnDentistaIDChanged();
    partial void OnNombreDentistaChanging(string value);
    partial void OnNombreDentistaChanged();
    partial void OnDirecciónChanging(string value);
    partial void OnDirecciónChanged();
    partial void OnTeléfonoChanging(string value);
    partial void OnTeléfonoChanged();
    partial void OnEdadChanging(int value);
    partial void OnEdadChanged();
    partial void OnEspecialidadChanging(int value);
    partial void OnEspecialidadChanged();
    #endregion
		
		public Dentista()
		{
			this._Citas = new EntitySet<Cita>(new Action<Cita>(this.attach_Citas), new Action<Cita>(this.detach_Citas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DentistaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DentistaID
		{
			get
			{
				return this._DentistaID;
			}
			set
			{
				if ((this._DentistaID != value))
				{
					this.OnDentistaIDChanging(value);
					this.SendPropertyChanging();
					this._DentistaID = value;
					this.SendPropertyChanged("DentistaID");
					this.OnDentistaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreDentista", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string NombreDentista
		{
			get
			{
				return this._NombreDentista;
			}
			set
			{
				if ((this._NombreDentista != value))
				{
					this.OnNombreDentistaChanging(value);
					this.SendPropertyChanging();
					this._NombreDentista = value;
					this.SendPropertyChanged("NombreDentista");
					this.OnNombreDentistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dirección", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Dirección
		{
			get
			{
				return this._Dirección;
			}
			set
			{
				if ((this._Dirección != value))
				{
					this.OnDirecciónChanging(value);
					this.SendPropertyChanging();
					this._Dirección = value;
					this.SendPropertyChanged("Dirección");
					this.OnDirecciónChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teléfono", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Teléfono
		{
			get
			{
				return this._Teléfono;
			}
			set
			{
				if ((this._Teléfono != value))
				{
					this.OnTeléfonoChanging(value);
					this.SendPropertyChanging();
					this._Teléfono = value;
					this.SendPropertyChanged("Teléfono");
					this.OnTeléfonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edad", DbType="Int NOT NULL")]
		public int Edad
		{
			get
			{
				return this._Edad;
			}
			set
			{
				if ((this._Edad != value))
				{
					this.OnEdadChanging(value);
					this.SendPropertyChanging();
					this._Edad = value;
					this.SendPropertyChanged("Edad");
					this.OnEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especialidad", DbType="Int NOT NULL")]
		public int Especialidad
		{
			get
			{
				return this._Especialidad;
			}
			set
			{
				if ((this._Especialidad != value))
				{
					this.OnEspecialidadChanging(value);
					this.SendPropertyChanging();
					this._Especialidad = value;
					this.SendPropertyChanged("Especialidad");
					this.OnEspecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dentista_Cita", Storage="_Citas", ThisKey="DentistaID", OtherKey="DentistaID")]
		public EntitySet<Cita> Citas
		{
			get
			{
				return this._Citas;
			}
			set
			{
				this._Citas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Citas(Cita entity)
		{
			this.SendPropertyChanging();
			entity.Dentista = this;
		}
		
		private void detach_Citas(Cita entity)
		{
			this.SendPropertyChanging();
			entity.Dentista = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Especialidades")]
	public partial class Especialidade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EspecialidadID;
		
		private string _NombreEspecialidad;
		
		private EntitySet<Cita> _Citas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEspecialidadIDChanging(int value);
    partial void OnEspecialidadIDChanged();
    partial void OnNombreEspecialidadChanging(string value);
    partial void OnNombreEspecialidadChanged();
    #endregion
		
		public Especialidade()
		{
			this._Citas = new EntitySet<Cita>(new Action<Cita>(this.attach_Citas), new Action<Cita>(this.detach_Citas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EspecialidadID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EspecialidadID
		{
			get
			{
				return this._EspecialidadID;
			}
			set
			{
				if ((this._EspecialidadID != value))
				{
					this.OnEspecialidadIDChanging(value);
					this.SendPropertyChanging();
					this._EspecialidadID = value;
					this.SendPropertyChanged("EspecialidadID");
					this.OnEspecialidadIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreEspecialidad", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string NombreEspecialidad
		{
			get
			{
				return this._NombreEspecialidad;
			}
			set
			{
				if ((this._NombreEspecialidad != value))
				{
					this.OnNombreEspecialidadChanging(value);
					this.SendPropertyChanging();
					this._NombreEspecialidad = value;
					this.SendPropertyChanged("NombreEspecialidad");
					this.OnNombreEspecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Especialidade_Cita", Storage="_Citas", ThisKey="EspecialidadID", OtherKey="EspecialidadID")]
		public EntitySet<Cita> Citas
		{
			get
			{
				return this._Citas;
			}
			set
			{
				this._Citas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Citas(Cita entity)
		{
			this.SendPropertyChanging();
			entity.Especialidade = this;
		}
		
		private void detach_Citas(Cita entity)
		{
			this.SendPropertyChanging();
			entity.Especialidade = null;
		}
	}
	
	public partial class BuscarCitaResult
	{
		
		private int _CitaID;
		
		private string _Dentista;
		
		private string _Especialidad;
		
		private string _Paciente;
		
		private string _Descripción;
		
		public BuscarCitaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CitaID", DbType="Int NOT NULL")]
		public int CitaID
		{
			get
			{
				return this._CitaID;
			}
			set
			{
				if ((this._CitaID != value))
				{
					this._CitaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dentista", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Dentista
		{
			get
			{
				return this._Dentista;
			}
			set
			{
				if ((this._Dentista != value))
				{
					this._Dentista = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especialidad", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Especialidad
		{
			get
			{
				return this._Especialidad;
			}
			set
			{
				if ((this._Especialidad != value))
				{
					this._Especialidad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					this._Paciente = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripción", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Descripción
		{
			get
			{
				return this._Descripción;
			}
			set
			{
				if ((this._Descripción != value))
				{
					this._Descripción = value;
				}
			}
		}
	}
	
	public partial class BuscarPacienteResult
	{
		
		private int _PacienteID;
		
		private string _Nombre;
		
		private string _Dirección;
		
		private string _Teléfono;
		
		public BuscarPacienteResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PacienteID", DbType="Int NOT NULL")]
		public int PacienteID
		{
			get
			{
				return this._PacienteID;
			}
			set
			{
				if ((this._PacienteID != value))
				{
					this._PacienteID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dirección", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Dirección
		{
			get
			{
				return this._Dirección;
			}
			set
			{
				if ((this._Dirección != value))
				{
					this._Dirección = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teléfono", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Teléfono
		{
			get
			{
				return this._Teléfono;
			}
			set
			{
				if ((this._Teléfono != value))
				{
					this._Teléfono = value;
				}
			}
		}
	}
	
	public partial class BuscarDentistaResult
	{
		
		private int _DentistaID;
		
		private string _Nombre;
		
		private string _Dirección;
		
		private string _Teléfono;
		
		private int _Edad;
		
		private string _Especialidad;
		
		public BuscarDentistaResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DentistaID", DbType="Int NOT NULL")]
		public int DentistaID
		{
			get
			{
				return this._DentistaID;
			}
			set
			{
				if ((this._DentistaID != value))
				{
					this._DentistaID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dirección", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Dirección
		{
			get
			{
				return this._Dirección;
			}
			set
			{
				if ((this._Dirección != value))
				{
					this._Dirección = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teléfono", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Teléfono
		{
			get
			{
				return this._Teléfono;
			}
			set
			{
				if ((this._Teléfono != value))
				{
					this._Teléfono = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edad", DbType="Int NOT NULL")]
		public int Edad
		{
			get
			{
				return this._Edad;
			}
			set
			{
				if ((this._Edad != value))
				{
					this._Edad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especialidad", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Especialidad
		{
			get
			{
				return this._Especialidad;
			}
			set
			{
				if ((this._Especialidad != value))
				{
					this._Especialidad = value;
				}
			}
		}
	}
	
	public partial class DentistasMostrarTodosResult
	{
		
		private int _ID;
		
		private string _Nombre;
		
		private string _Dirección;
		
		private string _Teléfono;
		
		private int _Edad;
		
		private string _Especialidad;
		
		public DentistasMostrarTodosResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dirección", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Dirección
		{
			get
			{
				return this._Dirección;
			}
			set
			{
				if ((this._Dirección != value))
				{
					this._Dirección = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teléfono", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Teléfono
		{
			get
			{
				return this._Teléfono;
			}
			set
			{
				if ((this._Teléfono != value))
				{
					this._Teléfono = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edad", DbType="Int NOT NULL")]
		public int Edad
		{
			get
			{
				return this._Edad;
			}
			set
			{
				if ((this._Edad != value))
				{
					this._Edad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especialidad", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Especialidad
		{
			get
			{
				return this._Especialidad;
			}
			set
			{
				if ((this._Especialidad != value))
				{
					this._Especialidad = value;
				}
			}
		}
	}
	
	public partial class BuscarEspecialidadResult
	{
		
		private int _EspecialidadID;
		
		private string _Especialidad;
		
		public BuscarEspecialidadResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EspecialidadID", DbType="Int NOT NULL")]
		public int EspecialidadID
		{
			get
			{
				return this._EspecialidadID;
			}
			set
			{
				if ((this._EspecialidadID != value))
				{
					this._EspecialidadID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especialidad", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Especialidad
		{
			get
			{
				return this._Especialidad;
			}
			set
			{
				if ((this._Especialidad != value))
				{
					this._Especialidad = value;
				}
			}
		}
	}
	
	public partial class PacientesMostrarTodosResult
	{
		
		private int _ID;
		
		private string _Nombre;
		
		private string _Dirección;
		
		private string _Teléfono;
		
		public PacientesMostrarTodosResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dirección", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Dirección
		{
			get
			{
				return this._Dirección;
			}
			set
			{
				if ((this._Dirección != value))
				{
					this._Dirección = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teléfono", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Teléfono
		{
			get
			{
				return this._Teléfono;
			}
			set
			{
				if ((this._Teléfono != value))
				{
					this._Teléfono = value;
				}
			}
		}
	}
	
	public partial class EspecialidadesMostrarTodosResult
	{
		
		private int _ID;
		
		private string _Especialidad;
		
		public EspecialidadesMostrarTodosResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especialidad", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Especialidad
		{
			get
			{
				return this._Especialidad;
			}
			set
			{
				if ((this._Especialidad != value))
				{
					this._Especialidad = value;
				}
			}
		}
	}
	
	public partial class CitasMostrarTodosResult
	{
		
		private int _ID;
		
		private string _Dentista;
		
		private string _Especialidad;
		
		private string _Paciente;
		
		private string _Descripción;
		
		public CitasMostrarTodosResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dentista", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Dentista
		{
			get
			{
				return this._Dentista;
			}
			set
			{
				if ((this._Dentista != value))
				{
					this._Dentista = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especialidad", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Especialidad
		{
			get
			{
				return this._Especialidad;
			}
			set
			{
				if ((this._Especialidad != value))
				{
					this._Especialidad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paciente", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Paciente
		{
			get
			{
				return this._Paciente;
			}
			set
			{
				if ((this._Paciente != value))
				{
					this._Paciente = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripción", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Descripción
		{
			get
			{
				return this._Descripción;
			}
			set
			{
				if ((this._Descripción != value))
				{
					this._Descripción = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
